#!/bin/sh
set -e

info() {
    echo "$(date --iso-8601=seconds 2>/dev/null || date -Iseconds) INFO $*" >&2
}

info "Received message: $*"

# Parse the smart rest message, ignore the first two field, and everything afterwards is the command
COMMAND="${1#*,*,}"

# Check if command is wrapped with quotes, if so then remove them
# Use a case statement, as it is posix compatiable
case "$COMMAND" in
  '"'*'"')
    # Remove the first char
    COMMAND="${COMMAND#?}"
    # Remove the last char
    COMMAND="${COMMAND%?}"
    ;;
esac

# Default values (can be overriden by the settings file)
SHELL_OPTIONS="bash sh"
SHELL_BIN=

# Load settings file
SETTINGS_FILE=/etc/c8y-command-plugin/env
if [ -f "$SETTINGS_FILE" ]; then
    FOUND_FILE=$(find "$SETTINGS_FILE" -perm 644 | head -n1)

    if [ -n "$FOUND_FILE" ]; then
        info "Loading settings: $FOUND_FILE"
        # shellcheck disable=SC1090
        . "$FOUND_FILE" ||:
    fi
fi

# Auto detect the shell. Match on the first available shell
# If the shell bin is invalid, then just let it fail (this might be useful to disable the shell function on the device)
if [ -z "$SHELL_BIN" ]; then
    for NAME in $SHELL_OPTIONS; do
        if command -V "$NAME" >/dev/null 2>&1; then
            SHELL_BIN="$NAME"
            break
        fi
    done
fi

if [ -z "$SHELL_BIN" ]; then
    SHELL_BIN="sh"
fi

info "Using shell: $SHELL_BIN"

EXIT_CODE=0
"$SHELL_BIN" -c "$COMMAND" || EXIT_CODE=$?

if [ "${EXIT_CODE}" -ne 0 ]; then
    info "Command returned a non-zero exit code. code=$EXIT_CODE"
fi

exit "$EXIT_CODE"
